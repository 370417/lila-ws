http.port = 9664
mongo.uri = "mongodb://localhost:27017/lichess"
redis.uri = "redis://127.0.0.1"
csrf.origin = "http://l.org"
# csrf.origin = "https://lichess.org"

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      # receive = on
      # autoreceive = on
      # lifecycle = on
    }
  }
}

play {
  server {
    websocket {
      # Maximum allowable frame payload length. Setting this value to your application's
      # requirement may reduce denial of service attacks using long data frames.
      # frame.maxLength = 64k
      frame.maxLength = 4k
    }
  }
  filters {
    headers.contentSecurityPolicy = null
#    hosts {
#      allowed = ["localhost:9000"]
#    }
  }
}

play.http.secret.key="cTsuAGrQFNTBeoKJseg5jRUNmA1oFimrOPPjWHUKQKfwBJtrM85kdt2KwzPfEN0Q"

kamon {
  metric {
    tick-interval = 20 second
    track-unmatched-entities = yes
    filters {
      trace {
        includes = [ "**" ]
        excludes = [ ]
      }
    }
  }

  influxdb {
    hostname = "127.0.0.1"
    port = 8086

    # The maximum packet size for one POST request, set to 0 to disable batching
    max-packet-size = 16384

    # The protocol, either http or udp
    protocol = "udp"

    # The measurements will be named ${application-name}-timers and -counters
    application-name = "dev"

    # For histograms, which percentiles to count
    percentiles = [25.0, 50.0, 75.0, 95.0, 99.0]
  }
}
